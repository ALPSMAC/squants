[0m[[0minfo[0m] [0m[32mMoneySpec:[0m[0m
[0m[[0minfo[0m] [0m[32mMoney and its Units of Measure[0m[0m
[0m[[0minfo[0m] [0m[32m- should create values using factories that take Currency[0m[0m
[0m[[0minfo[0m] [0m[32m- should create values using factories that take Currency Code (String)[0m[0m
[0m[[0minfo[0m] [0m[32m- should create values using Currency (UOM) factories[0m[0m
[0m[[0minfo[0m] [0m[32m- should create values using 'no currency' factories with an implicit MoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should create values from formatted strings[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper result when comparing like currencies[0m[0m
[0m[[0minfo[0m] [0m[33m- should return proper result when comparing dislike currencies with a MoneyContext in scope (pending)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper result when adding like currencies with no MoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper result when subtracting like currencies with no MoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper result when dividing like currencies with no MoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a NoSuchExchangeRateException when adding cross currency values with only the defaultMoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an UnsupportedOperationException when adding cross currency using the default Quantity.plus method[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a NoSuchExchangeRateException when subtracting cross currency values with only the defaultMoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an UnsupportedOperationException when subtracting cross currency using the default Quantity.minus method[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw a NoSuchExchangeRateException when dividing cross currency values with only the defaultMoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an UnsupportedOperationException when dividing cross currency using the default Quantity.minus method[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when multiplying by Double[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when multiplying by BigDecimal[0m[0m
[0m[[0minfo[0m] [0m[32m- should return the equal value in the other currency when multiplied by a CurrencyExchangeRate[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when dividing by Double[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when dividing by BigDecimal[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when remaindering by Double[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when remaindering by BigDecimal[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when dividing and remaindering by Double[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when dividing and remaindering by BigDecimal[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper result when dividing by a Money value[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when negating a value[0m[0m
[0m[[0minfo[0m] [0m[32m- should return proper results when getting the absolute value[0m[0m
[0m[[0minfo[0m] [0m[32m- should add cross currencies with a MoneyContext and applicable rates in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should return an Exchange Rate on toThe a different currency[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an IllegalArgumentException on toThe a same currency[0m[0m
[0m[[0minfo[0m] [0m[32m- should convert currencies based on the MoneyContext[0m[0m
[0m[[0minfo[0m] [0m[32m- should not compile cross currency conversions with no implicit MoneyContext in scope[0m[0m
[0m[[0minfo[0m] [0m[32m- should return properly formatted strings for all supported Units of Measure[0m[0m
[0m[[0minfo[0m] [0m[32m- should return a properly sorted list of Moneys[0m[0m
[0m[[0minfo[0m] [0m[32mMoneyConversions[0m[0m
[0m[[0minfo[0m] [0m[32m- should provide aliases for single unit values[0m[0m
[0m[[0minfo[0m] [0m[32m- should provide implicit conversion from Double[0m[0m
